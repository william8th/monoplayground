type Query {
}

extend type Query {
    members: [Member!]
}

extend type Query {
    accounts: [Account!]
}

extend type Query {
    books: [Book!]
    book(id: ID): Book
    artifacts: [Artifact!]!
}

union Artifact = Book | Movie

type Book {
    id: ID!
    name: String!
    author: Author!
}

type Movie {
    id: ID!
    name: String!
    author: Author!
}

type Author {
    id: ID!
    name: String!
}

type Member {
    id: String!
    name: String!
    accounts: [Account!]
}

type Account {
    id: String!
    balance: Int!
}

type Mutation {
    createBook(name: String!, authorName: String!): Book!
}

